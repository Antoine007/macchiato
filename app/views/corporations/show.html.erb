<script src="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>

<%= image_tag "logo.png", :class => "logo" %>


<div id="new-corp" class="container">
  <div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8 text-center">
        <h2><%= t('welcome', first_name: @corporation.contact_first)  %></h2>
        </br>
        <p><b><%= t('corp_name') %> :</b> <%= @corporation.name %></p>
        <p><b><%= t('division') %> :</b> <%= @corporation.division %></p>
        </br>
    </div>
    <div class="col-md-2"></div>
  </div>


  <div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8 text-center">
      <p><b><%= t('new_emails_box') %></b></p>
      <%= form_for [@corporation, User.new] do |f| %>
      <!-- was @user but doesn't help for showing results! -->
        <!-- Don't use f. and define it as text_area emails -->
        <%= f.text_area :email, :placeholder => t('emails_placeholder'), :class => "form-control" %>
        <%= f.submit t('invite'), :class => "btn btn-block btn-contact btn-cs" %>
      <% end %>
    </div>
    <div class="col-md-2"></div>
  </div>

  <br>
  <br>

  <div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8 text-center">
      <div class="row">
        <div class="col-md-8">
          <p><%= t('percentage_taken') %></p>
        </div>
        <div class="col-md-4">
          <p><%= @array.length %> / <%= @users.size %></p>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <% for i in (1..16) do  %>
            <div class="row">
              <div class="col-md-8">
                <p><%= t("category#{i}") %></p>
              </div>
              <div class="col-md-4">
                <p><%= @array.count(i) %></p>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
    <div class="col-md-2"></div>
  </div>

  <br>

  <div class="row ">
    <!-- <div class="col-md-4"></div> -->
    <div class="col-md-12">
      <div id="pie" class="ct-chart" style="height:500px"></div>
    </div>
    <!-- <div class="col-md-4"></div> -->
  </div>

  <br>



  <div class="row ">
    <div class="col-md-4"></div>
    <div class="col-md-4">
      <%= link_to t('all_personnalities'), all_answers_path , :target => "_blank", :class => "btn btn-block btn-contact btn-cs"  %>
    </div>
    <div class="col-md-4"></div>
  </div>

  <br>

  <div class="row ">
    <div class="col-md-4"></div>
    <div class="col-md-4">
      <%= link_to t('finish_campaign'), corporation_finish_path(@corporation) , :target => "_blank", :class => "btn btn-block btn-contact btn-cs" %>
    </div>
    <div class="col-md-4"></div>
  </div>

  <br>

  <div class="row ">
    <div class="col-md-4"></div>
    <div class="col-md-4">
      <%= link_to t('home'), root_path, :class => "btn btn-block btn-contact btn-cs" %>
    </div>
    <div class="col-md-4"></div>
    </div>
  </div>

</div>


<%= javascript_tag do %>
  var introverted = "<%= t('introverted') %>";
  var extraverted = "<%= t('extraverted') %>";
  var thoughtful  = "<%= t('thoughtful')  %>";
  var intuitive   = "<%= t('intuitive')   %>";

  var series = [<%= @array.count(1) %>,
                <%= @array.count(2) %>,
                <%= @array.count(3) %>,
                <%= @array.count(4) %>,
                <%= @array.count(5) %>,
                <%= @array.count(6) %>,
                <%= @array.count(7) %>,
                <%= @array.count(8) %>,
                <%= @array.count(9) %>,
                <%= @array.count(10)%>,
                <%= @array.count(11)%>,
                <%= @array.count(12)%>,
                <%= @array.count(13)%>,
                <%= @array.count(14)%>,
                <%= @array.count(15)%>,
                <%= @array.count(16)%>];

var labels = ["<%= t('category1') %>",
              "<%= t('category2') %>",
              "<%= t('category3') %>",
              "<%= t('category4') %>",
              "<%= t('category5') %>",
              "<%= t('category6') %>",
              "<%= t('category7') %>",
              "<%= t('category8') %>",
              "<%= t('category9') %>",
              "<%= t('category10')%>",
              "<%= t('category11')%>",
              "<%= t('category12')%>",
              "<%= t('category13')%>",
              "<%= t('category14')%>",
              "<%= t('category15')%>",
              "<%= t('category16')%>"];

  var result =[]
  for (var i=0; i < labels.length; i++) {
    if( series[i] !== 0){
      result.push( series[i] + "x " + labels[i])
    }else{
      result.push("")
    }
  }

  var chart = new Chartist.Pie('#pie', {
    series: series,
    labels: result
  }, {
    donut: true,
    showLabel: true
  });


  chart.on('draw', function(data) {
    if(data.type === 'slice') {
      // Get the total path length in order to use for dash array animation
      var pathLength = data.element._node.getTotalLength();

      // Set a dasharray that matches the path length as prerequisite to animate dashoffset
      data.element.attr({
        'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'
      });

      // Create animation definition while also assigning an ID to the animation for later sync usage
      var animationDefinition = {
        'stroke-dashoffset': {
          id: 'anim' + data.index,
          dur: 1000,
          from: -pathLength + 'px',
          to:  '0px',
          easing: Chartist.Svg.Easing.easeOutQuint,
          // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)
          fill: 'freeze'
        }
      };

      // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation
      if(data.index !== 0) {
        animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';
      }

      // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us
      data.element.attr({
        'stroke-dashoffset': -pathLength + 'px'
      });

      // We can't use guided mode as the animations need to rely on setting begin manually
      // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate
      data.element.animate(animationDefinition, false);
    }
  });

  // For the sake of the example we update the chart every time it's created with a delay of 8 seconds
  chart.on('created', function() {
    if(window.__anim21278907124) {
      clearTimeout(window.__anim21278907124);
      window.__anim21278907124 = null;
    }
    window.__anim21278907124 = setTimeout(chart.update.bind(chart), 20000);
  });

<% end %>




